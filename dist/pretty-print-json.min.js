//! pretty-print-json v0.1.4 ~ github.com/center-key/pretty-print-json ~ MIT License
function _typeof(a){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}var prettyPrintJson={version:"0.1.4",toHtml:function toHtml(a,b){var c=Object.assign({indent:3,quoteKeys:!1},b),d=/^( *)("[^"]+": )?("[^"]*"|[\w.+-]*)?([{}[\],]*)?$/mg;return function htmlEntities(a){return a.replace(/&/g,"&amp;").replace(/\\"/g,"&bsol;&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}(JSON.stringify(a,null,c.indent)).replace(d,function replacer(a,b,d,e,f){var g={indent:b,key:d,value:e,end:f},h=["true","false"].includes(g.value),i="null"===g.value,j=/^"/.test(g.value)?"<span class=json-string>":h?"<span class=json-boolean>":i?"<span class=json-null>":"<span class=json-value>",k=c.quoteKeys?/(.*)(): /:/"([\w]+)": |(.*): /,l=g.indent||"",m=g.key&&g.key.replace(k,"$1$2"),n=g.key?"<span class=json-key>"+m+"</span>: ":"",o=g.value?j+g.value+"</span>":"",p=g.end||"";return l+n+o+p})}};"object"===("undefined"==typeof module?"undefined":_typeof(module))&&(module.exports=prettyPrintJson),"object"===("undefined"==typeof window?"undefined":_typeof(window))&&(window.prettyPrintJson=prettyPrintJson);
